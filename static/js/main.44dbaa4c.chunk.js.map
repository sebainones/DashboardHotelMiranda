{"version":3,"sources":["StatusButton.js","NewDataButton.js","OrderBy.js","Rooms.js","NavbarHorizontal.js","NavbarVertical.js","Concierge.js","App.js","reportWebVitals.js","index.js"],"names":["StatButton","styled","button","props","compo","css","StatusButton","buttonName","NewButton","NewDataButton","history","useHistory","onClick","push","value","OrderSelect","select","OrderBy","console","log","options","hidden","map","element","index","ContainerRooms","div","HeaderRooms","TabsRooms","ButtonsRooms","TableRooms","table","TrRooms","tr","TrRoomsHeader","TdRooms","td","ThRooms","th","Rooms","clickedRow","pId","href","type","className","rooms","id","name","bedType","floor","rate","status","GlobalDiv","Title","Buttons","NavbarHorizontal","useParams","path","window","location","pathname","replace","compoName","charAt","toUpperCase","slice","to","VerticalDiv","VerticalUl","ul","VerticalLi","NavLink","Logo","NavbarVertical","App","ContentDiv","HorizontalDiv","useState","authenticated","setAuthenticated","asd","localStorage","getItem","useEffect","navbarHor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44dbaa4c.chunk.js","sourcesContent":["import React, { Component }  from 'react';\nimport styled, { css } from \"styled-components\"\n\nconst StatButton = styled.button`\n    border-radius: 12px;\n    width: 125px;\n    height: 48px;\n    border: none;\n    text-align: center;\n    font: normal normal medium 16px/25px Poppins;\n    letter-spacing: 0px;\n    color: #FFFFFF;\n\n\n    ${props => props.compo === \"roomsAvailable\" && css`\n        background: #5AD07A 0% 0% no-repeat padding-box;\n    `}\n    ${props => props.compo === \"roomsBooked\" && css`\n        background: #E23428 0% 0% no-repeat padding-box;\n    `}\n    ${props => props.compo === \"roomsNew\" && css`\n        width: 213px;\n        height: 49px;\n        background: #135846 0% 0% no-repeat padding-box;\n        border-radius: 12px;\n    `}\n    ${props => props.compo === \"conciergeActive\" && css`\n        background: #E8FFEE 0% 0% no-repeat padding-box;\n        color: #5AD07A;\n    `}\n    ${props => props.compo === \"conciergeInactive\" && css`\n        background: #FFEDEC 0% 0% no-repeat padding-box;\n        color: #E23428;\n    `}\n`\nfunction StatusButton(props) {\n\n\n    return (\n        <div>\n            <StatButton compo={props.compo + props.buttonName} data-testid=\"button-element\">{props.buttonName}</StatButton>\n        </div>\n    )\n}\n\nexport { StatusButton }","import React, { Component }  from 'react';\nimport styled, { css } from \"styled-components\"\nimport { useHistory } from \"react-router-dom\";\n\nconst NewButton = styled.button`\n    width: 213px;\n    height: 49px;\n    border-radius: 12px;\n    border: none;\n    text-align: center;\n    font: normal normal medium 16px/25px Poppins;\n    letter-spacing: 0px;\n    color: #FFFFFF;\n    margin-right: 20px;\n    background: #135846 0% 0% no-repeat padding-box;\n    border-radius: 12px;\n\n\n`\nfunction NewDataButton(props) {\n    let history = useHistory()\n\n    const clickedButton = () => {\n        if (props.compo === \"concierge\") {\n            history.push(\"/newEmployee\")\n        } else {\n            history.push(\"/newRoom\")\n        }\n    }\n\n    return (\n        <div>\n            <NewButton data-testid=\"button-element\" onClick={clickedButton}>{props.value}</NewButton>\n        </div>\n    )\n}\n\nexport { NewDataButton }","import React, { Component }  from 'react';\nimport styled, { css } from \"styled-components\"\n\nconst OrderSelect = styled.select`\n    width: 134px;\n    height: 48px;\n    border: 1px solid #135846;\n    border-radius: 12px;\n    text-align-last: left;\n    padding-left: 30px;\n    font: normal normal medium 16px/25px Poppins;\n    letter-spacing: 0px;\n    color: #135846;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-image:\n        linear-gradient(45deg, transparent 50%, #135846 50%),\n        linear-gradient(135deg, #135846 50%, transparent 50%),\n        linear-gradient(to right, #135846, #135846);\n    background-position:\n        calc(100% - 20px) center,\n        calc(100% - 15px) center,\n        calc(100% - 2.5em) center;\n    background-size:\n        5px 5px,\n        5px 5px,\n        1px 1.5em;\n    background-repeat: no-repeat;\n\n    &:focus{\n        outline: none;\n    }\n\n    ${props => props.compo === \"roomsAvailable\" && css`\n        background: #5AD07A 0% 0% no-repeat padding-box;\n    `}\n\n`\nfunction OrderBy(props) {\nconsole.log(props.options);\n\n    return (\n        <div>\n            <OrderSelect >\n                <option hidden>Newest</option>\n                {props.options.map((element, index) => \n                    <option key={index}>{element}</option>\n                )}\n            </OrderSelect>\n        </div>\n    )\n}\n\nexport { OrderBy }","import React, { Component }  from 'react';\nimport styled from \"styled-components\"\nimport rooms from \"./jsons/rooms.json\"\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport {\n    useHistory\n} from \"react-router-dom\";\nimport { StatusButton } from \"./StatusButton\";\nimport { NewDataButton } from \"./NewDataButton\";\nimport { OrderBy } from \"./OrderBy\";\n\n\nconst ContainerRooms = styled.div`\n    background-color: #F8F8F8;\n    width: 90%;\n`\n\nconst HeaderRooms = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 30px;\n`\n\nconst TabsRooms = styled.div`\n    width: 50%;\n    margin: 20px 0 0 10px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    a{\n        font-size: 16px;\n        margin-right: 30px;\n        text-decoration: none;\n        text-align: right;\n        font-weight: bold;\n        font: normal normal medium 16px/25px Poppins;\n        letter-spacing: 0px;\n        color: #6E6E6E;\n        border-bottom: #6E6E6E solid 1px;\n        padding: 10px;\n        &:hover{\n            color: #135846;\n            border-bottom: #135846 solid 3px;\n            margin-bottom: -2px\n        }\n    }\n`\n\nconst ButtonsRooms = styled.div`\n\n`\n\nconst TableRooms = styled.table`\n    width:100%;\n`\n\nconst TrRooms = styled.tr`\n    height: 90px;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    border-radius: 20px;\n    transition: transform .6s;\n    border-bottom: transparent solid 2px;\n    &:hover{\n        transform: scale(1.02)\n    }\n`\n\nconst TrRoomsHeader = styled.tr`\n    height: 65px;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    border-radius: 20px;\n    border-bottom: transparent solid 3px\n`\n\nconst TdRooms = styled.td`\n    text-align: center;\n    vertical-align: middle;\n`\n\nconst ThRooms = styled.th`\n    font-weight: bold;\n    text-align: center;\n    vertical-align: middle;\n    &.options{\n        width: 60px;\n    }\n`\nfunction Rooms() {\n    \n    let history = useHistory()\n    let orderArr = ['a','b','c']\n\n\n    const clickedRow = (pId) => {\n\n        history.push(\"/room/\" + pId)\n    }\n\n\n    return (\n        <ContainerRooms>\n                <HeaderRooms>\n                    <TabsRooms>\n                        <a href=\"https://www.google.com\">All rooms</a>\n                        <a href=\"https://www.google.com\">Available rooms</a>\n                        <a href=\"https://www.google.com\">Booked rooms</a>\n                    </TabsRooms>\n                    <ButtonsRooms>\n                        <NewDataButton buttonName=\"New\" compo=\"rooms\" value=\"+ New room\"></NewDataButton>\n                        <OrderBy options={orderArr} />\n                    </ButtonsRooms>\n                </HeaderRooms>\n            \n            <TableRooms>\n                <thead>\n\n                <TrRoomsHeader>\n                    <ThRooms><input type=\"checkbox\"/></ThRooms>\n                    <ThRooms>Room Name</ThRooms>\n                    <ThRooms>Bed Type</ThRooms>\n                    <ThRooms>Room Floor</ThRooms>\n                    <ThRooms>Facilities</ThRooms>\n                    <ThRooms>Rate</ThRooms>\n                    <ThRooms>Status</ThRooms>\n                    <ThRooms className=\"options\"></ThRooms>\n                    </TrRoomsHeader>\n                </thead>\n                <tbody>\n                {rooms.map((element, index) =>\n                    <TrRooms key={index}>\n                        <TdRooms><input type=\"checkbox\" /></TdRooms>\n                        <TdRooms onClick={() => clickedRow(element.id)}>{element.name}</TdRooms>\n                        <TdRooms onClick={() => clickedRow(element.id)}>{element.bedType}</TdRooms>\n                        <TdRooms onClick={() => clickedRow(element.id)}>{element.floor}</TdRooms>\n                        <TdRooms onClick={() => clickedRow(element.id)}>Facilities</TdRooms>\n                        <TdRooms onClick={() => clickedRow(element.id)}><b>{element.rate}</b>/night</TdRooms>\n                        <TdRooms >\n                            <StatusButton buttonName={element.status} compo=\"rooms\"></StatusButton>\n                        </TdRooms>\n                        <TdRooms>\n                            {/* <FontAwesomeIcon icon={faEllipsisV} /> */}\n                        </TdRooms>\n\n                    </TrRooms>\n                )}\n                </tbody>\n\n            </TableRooms>\n\n        </ContainerRooms>\n    )\n}\n\nexport { Rooms }","\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faEnvelope, faBell } from '@fortawesome/free-regular-svg-icons'\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { ComponentContext } from \"./App\"\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { NavLink } from \"react-router-dom\";\n\nconst GlobalDiv = styled.div`\n    background-color:red;\n    width: 100%;\n    height: 8vh;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst Title = styled.div`\n    display: flex;\n    margin:0;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Buttons = styled.div`\n    margin:0 50px;\n    width: 50%;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    font-size:26px;\n    a{\n        color: #135846;\n        margin-left: 50px;\n    }\n`\n\nfunction NavbarHorizontal() {\n    const {} = useParams()\n    let path = window.location.pathname.replace('/', '')\n    let compoName = path.charAt(0).toUpperCase() + path.slice(1)\n    if (compoName === \"\") {\n        compoName = \"Dashboard\"\n    }\n\n    return (\n        <div>\n            <GlobalDiv>\n\n                <Title>\n                    <h1>{compoName}</h1>\n                </Title>\n                <Buttons>\n                    <NavLink to=\"messages\">\n                        {/* <FontAwesomeIcon icon={faEnvelope} /> */}\n                    </NavLink>\n                    <a href=\"https://www.google.com\">\n                        {/* <FontAwesomeIcon icon={faBell} /> */}\n                    </a>\n\n                </Buttons>\n            </GlobalDiv>\n        </div>\n    )\n}\n\nexport { NavbarHorizontal }","import React, { Component }  from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faKey, faUser, faTh, faCalendarCheck, faConciergeBell, faHotel } from '@fortawesome/free-solid-svg-icons'\n\nconst VerticalDiv = styled.div`\n    background-color:blue;\n    width: 15vw;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    `;\n\nconst VerticalUl = styled.ul`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    li{\n        width: 50%;\n        background-color: white;\n        margin-bottom: 15px;\n        height: 65px;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n    }\n    `;\n\nconst VerticalLi = styled(NavLink)`\n    color: red;\n    text-decoration: none;\n    margin-left: 30px;\n`;\n\nconst Logo = styled.div`\n    text-align: left;\n    margin: 30px 60px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    h1{\n        font-size:40px;\n        font-weight: 600;\n    }\n    p{\n        font-size: 12px;\n        color: #5D5449;\n    }\n    .asd{\n        color: red;\n        font-size: 40px;\n        margin-right: 15px;\n    }\n    `;\nfunction NavbarVertical(props) {\n\n    const value = props.value;\n\n\n    if (value) {\n        return (\n            <div>\n\n                <VerticalDiv>\n                    <Logo>\n                        <div>\n                            {/* <FontAwesomeIcon icon={faHotel} className=\"asd\" /> */}\n                        </div>\n                        <div>\n                            <h1>travl</h1>\n                            <p>Hotel Admin Dashboard</p>\n                        </div>\n                    </Logo>\n                    <VerticalUl>\n                        <li>\n                            {/* <FontAwesomeIcon icon={faTh} /> */}\n                            <VerticalLi to=\"/\" id=\"dashboard\"> Dashboard</VerticalLi>\n                        </li>\n                        <li>\n                            {/* <FontAwesomeIcon icon={faKey} /> */}\n                            <VerticalLi to=\"rooms\" id=\"rooms\"> Rooms</VerticalLi>\n                        </li>\n                        <li>\n                            {/* <FontAwesomeIcon icon={faCalendarCheck} /> */}\n                            <VerticalLi to=\"bookings\" id=\"bookings\"> Bookings</VerticalLi>\n                        </li>\n                        <li>\n                            {/* <FontAwesomeIcon icon={faConciergeBell} /> */}\n                            <VerticalLi to=\"concierge\" id=\"concierge\"> Concierge</VerticalLi>\n                        </li>\n                    </VerticalUl>\n                </VerticalDiv>\n\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <VerticalDiv>\n                    <Logo>\n                        <div>\n                            {/* <FontAwesomeIcon icon={faHotel} className=\"asd\" /> */}\n                        </div>\n                        <div>\n                            <h1>travl</h1>\n                            <p>Hotel Admin Dashboard</p>\n                        </div>\n                    </Logo>\n                    <VerticalUl>\n                        <li>\n                            {/* <FontAwesomeIcon icon={faTh} /> */}\n                            <VerticalLi to=\"/login\" data-testid=\"login-element\">Login</VerticalLi>\n                        </li>\n                        <li>\n                            {/* <FontAwesomeIcon icon={faTh} /> */}\n                            <VerticalLi to=\"/register\" data-testid=\"register-element\" id=\"register-button-nav\">Register</VerticalLi>\n                        </li>\n                    </VerticalUl>\n                </VerticalDiv>\n            </div>\n        )\n    }\n}\n\nexport { NavbarVertical }","import React, { Component }  from 'react';\nimport styled from \"styled-components\"\nimport concierge from \"./jsons/concierge.json\"\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport {\n    useHistory\n} from \"react-router-dom\";\nimport { StatusButton } from \"./StatusButton\";\nimport { NewDataButton } from \"./NewDataButton\";\nimport { OrderBy } from \"./OrderBy\";\n\nconst ContainerRooms = styled.div`\n    background-color: #F8F8F8;\n    width: 90%;\n`\n\nconst HeaderRooms = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 30px;\n`\n\nconst TabsRooms = styled.div`\n    width: 50%;\n    margin: 20px 0 0 10px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    a{\n        font-size: 16px;\n        margin-right: 30px;\n        text-decoration: none;\n        text-align: right;\n        font-weight: bold;\n        font: normal normal medium 16px/25px Poppins;\n        letter-spacing: 0px;\n        color: #6E6E6E;\n        border-bottom: #6E6E6E solid 1px;\n        padding: 10px;\n        &:hover{\n            color: #135846;\n            border-bottom: #135846 solid 3px;\n            margin-bottom: -2px\n        }\n    }\n`\n\nconst ButtonsRooms = styled.div`\n\n`\n\nconst TableRooms = styled.table`\n    width:100%;\n`\n\nconst TrRooms = styled.tr`\n    height: 90px;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    border-radius: 20px;\n    transition: transform .6s;\n    border-bottom: transparent solid 2px;\n    &:hover{\n        transform: scale(1.02)\n    }\n`\n\nconst TrRoomsHeader = styled.tr`\n    height: 65px;\n    background: #FFFFFF 0% 0% no-repeat padding-box;\n    border-radius: 20px;\n    border-bottom: transparent solid 3px\n`\n\nconst TdRooms = styled.td`\n    text-align: center;\n    vertical-align: middle;\n`\n\nconst ThRooms = styled.th`\n    font-weight: bold;\n    text-align: center;\n    vertical-align: middle;\n    &.options{\n        width: 60px;\n    }\n`\nfunction Concierge() {\n\n    let history = useHistory()\n    let orderArr = ['Active', 'Inactive']\n\n\n    const clickedRow = (pId) => {\n\n        history.push(\"/employee/\" + pId)\n    }\n\n\n    return (\n        <ContainerRooms>\n            <HeaderRooms>\n                <TabsRooms>\n                    <a href=\"https://www.google.com\">All employees</a>\n                    <a href=\"https://www.google.com\">Active employees</a>\n                    <a href=\"https://www.google.com\">Inactive employees</a>\n                </TabsRooms>\n                <ButtonsRooms>\n                    <NewDataButton buttonName=\"New\" compo=\"concierge\" value=\"+ New employee\" ></NewDataButton>\n                    <OrderBy options={orderArr} />\n                </ButtonsRooms>\n            </HeaderRooms>\n\n            <TableRooms>\n                <thead>\n\n                    <TrRoomsHeader>\n                        <ThRooms><input type=\"checkbox\" /></ThRooms>\n                        <ThRooms>Photo</ThRooms>\n                        <ThRooms>Name</ThRooms>\n                        <ThRooms>Employee ID</ThRooms>\n                        <ThRooms>Discharge date</ThRooms>\n                        <ThRooms>Job</ThRooms>\n                        <ThRooms>Phone</ThRooms>\n                        <ThRooms>Status</ThRooms>\n                        <ThRooms className=\"options\"></ThRooms>\n                    </TrRoomsHeader>\n                </thead>\n                <tbody>\n                    {concierge.map((element, index) =>\n                        <TrRooms key={index}>\n                            <TdRooms><input type=\"checkbox\" /></TdRooms>\n                            <TdRooms onClick={() => clickedRow(element.id)}>Photo</TdRooms>\n                            <TdRooms onClick={() => clickedRow(element.id)}>{element.name}</TdRooms>\n                            <TdRooms onClick={() => clickedRow(element.id)}>{element.id}</TdRooms>\n                            <TdRooms onClick={() => clickedRow(element.id)}>{element.dischargeDate}</TdRooms>\n                            <TdRooms onClick={() => clickedRow(element.id)}>{element.jobDesc}</TdRooms>\n                            <TdRooms onClick={() => clickedRow(element.id)}>{element.phone}</TdRooms>\n                            <TdRooms >\n                                <StatusButton buttonName={element.status} compo=\"concierge\"></StatusButton>\n                            </TdRooms>\n                            <TdRooms>\n                                {/* <FontAwesomeIcon icon={faEllipsisV} /> */}\n                            </TdRooms>\n\n                        </TrRooms>\n                    )}\n                </tbody>\n\n            </TableRooms>\n\n        </ContainerRooms>\n    )\n}\n\nexport { Concierge }","import './App.css';\nimport React, { useEffect, useState } from \"react\";\n// https://stackoverflow.com/questions/46056414/getting-404-for-links-with-create-react-app-deployed-to-github-pages\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Dashboard } from './Dashboard';\nimport { Rooms } from './Rooms';\nimport { Guests } from './Guests';\nimport { NavbarHorizontal } from './NavbarHorizontal';\nimport { NavbarVertical } from './NavbarVertical';\nimport { Bookings } from './Bookings';\nimport { Concierge } from './Concierge';\nimport { Room } from './Room';\nimport { Login } from './Login';\nimport { Register } from './Register';\nimport { PrivateRoute } from './PrivateRoute';\nimport styled from \"styled-components\"\nimport { Messages } from './Messages';\nimport { Employee } from './Employee';\nimport { NewEmployee } from './NewEmployee';\nimport { NewRoom } from './NewRoom';\n\n\n\nexport const AuthenticateContext = React.createContext();\n\n\nfunction App() {\n\n  const GlobalDiv = styled.div`\n        background-color: #F8F8F8 ;\n        width: 100%;\n        display: flex;\n        `;\n  \n  const ContentDiv = styled.div`\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        `;\n  \n  const HorizontalDiv = styled.div`\n        width: 100%;\n        display: flex;\n        justify-content: flex-start;\n        align-items: flex-start;\n        margin-bottom: 50px\n        `;\n\n\n  const [authenticated, setAuthenticated] = useState(false);\n\n\n  let asd = localStorage.getItem('authenticated')\n\n  useEffect(() => {\n    if (localStorage.getItem('authenticated')) {\n      setAuthenticated(true);\n    }\n  }, asd);\n\n  const authenticate = loggedIn => {\n    setAuthenticated(loggedIn);\n    if (loggedIn) {\n      localStorage.setItem('authenticated', '1');\n    } else {\n      localStorage.removeItem('authenticated');\n    }\n  };\n\n  const navbarHor = () => {\n    if (authenticated) {\n      return (\n        <HorizontalDiv>\n          <NavbarHorizontal />\n        </HorizontalDiv>\n\n      )\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n\n\n<GlobalDiv>\n          <NavbarVertical value={authenticated}/>\n          <ContentDiv>\n            {navbarHor()}\n            <Switch>\n              {/* <AuthenticateContext.Provider value={authenticated}> */}\n              <Rooms />\n\n                {/* <Route exact path=\"/\">\n                    <Dashboard />\n                </Route>\n                <Route path=\"/rooms\">\n                  \n                  </Route>\n                  <Route path=\"/bookings\">\n                    <Bookings />\n                  </Route>\n                  <Route path=\"/concierge\">\n                    <Concierge />\n                  </Route>\n                  <Route path=\"/messages\">\n                    <Messages />\n                  </Route>\n                  <Route path=\"/register\">\n                      <Register />\n                  </Route>\n                  <Route path=\"/newEmployee\">\n                    <NewEmployee />\n                  </Route>\n                  <Route path=\"/newRoom\">\n                    <NewRoom />\n                  </Route>\n                  <Route path=\"/room/:id\">\n                    <Room />\n                  </Route>\n                  <Route path=\"/employee/:id\">\n                    <Employee />\n                  </Route>\n                <Route path=\"/login\">\n                  <Login authenticate={authenticate} authenticated={authenticated}/>\n                </Route> */}\n              {/* </AuthenticateContext.Provider> */}\n\n            </Switch>\n          </ContentDiv>\n\n          </GlobalDiv>\n      {/* <Router>\n       \n      </Router> */}\n      \n\n    </div>\n    );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}